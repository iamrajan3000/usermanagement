// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package services is a generated GoMock package.
package services

import (
	models "Assignment_TotalityCorp/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserService is a mock of UserService interface.
type MockUserService struct {
	ctrl     *gomock.Controller
	recorder *MockUserServiceMockRecorder
}

// MockUserServiceMockRecorder is the mock recorder for MockUserService.
type MockUserServiceMockRecorder struct {
	mock *MockUserService
}

// NewMockUserService creates a new mock instance.
func NewMockUserService(ctrl *gomock.Controller) *MockUserService {
	mock := &MockUserService{ctrl: ctrl}
	mock.recorder = &MockUserServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserService) EXPECT() *MockUserServiceMockRecorder {
	return m.recorder
}

// GetUserById mocks base method.
func (m *MockUserService) GetUserById(id int32) (*models.User, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserById", id)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetUserById indicates an expected call of GetUserById.
func (mr *MockUserServiceMockRecorder) GetUserById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserById", reflect.TypeOf((*MockUserService)(nil).GetUserById), id)
}

// GetUsersByIds mocks base method.
func (m *MockUserService) GetUsersByIds(ids []int32) []*models.User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsersByIds", ids)
	ret0, _ := ret[0].([]*models.User)
	return ret0
}

// GetUsersByIds indicates an expected call of GetUsersByIds.
func (mr *MockUserServiceMockRecorder) GetUsersByIds(ids interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsersByIds", reflect.TypeOf((*MockUserService)(nil).GetUsersByIds), ids)
}

// SearchUsers mocks base method.
func (m *MockUserService) SearchUsers(criteria []models.SearchCriteria) []*models.User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchUsers", criteria)
	ret0, _ := ret[0].([]*models.User)
	return ret0
}

// SearchUsers indicates an expected call of SearchUsers.
func (mr *MockUserServiceMockRecorder) SearchUsers(criteria interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchUsers", reflect.TypeOf((*MockUserService)(nil).SearchUsers), criteria)
}
